{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[],"authorship_tag":"ABX9TyPOSDinrvaxBH2z4+DzGb79"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"code","source":["# Завантаження бібліотек\n","import numpy as np\n","import pandas as pd\n","import matplotlib.pyplot as plt\n","from sklearn.model_selection import train_test_split\n","from sklearn.tree import DecisionTreeRegressor, plot_tree\n","from sklearn.ensemble import RandomForestRegressor\n","from sklearn.metrics import mean_squared_error, mean_absolute_error, r2_score\n","import xgboost as xgb\n","\n","# Підготовка даних\n","# Завантажимо приклад датасету (можна замінити на власний)\n","data = load_boston()\n","X = pd.DataFrame(data.data, columns=data.feature_names)\n","y = pd.Series(data.target)\n","\n","# Розділення на тренувальну та тестову вибірки\n","X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":211},"id":"MedClU1N2cvd","executionInfo":{"status":"error","timestamp":1746405057188,"user_tz":-180,"elapsed":33,"user":{"displayName":"Bohdan Ostashchenko","userId":"07046015876740807484"}},"outputId":"73d84580-2b67-43d8-b426-2fc2584b1992"},"execution_count":6,"outputs":[{"output_type":"error","ename":"NameError","evalue":"name 'load_boston' is not defined","traceback":["\u001b[0;31m---------------------------------------------------------------------------\u001b[0m","\u001b[0;31mNameError\u001b[0m                                 Traceback (most recent call last)","\u001b[0;32m<ipython-input-6-ec01dcf68288>\u001b[0m in \u001b[0;36m<cell line: 0>\u001b[0;34m()\u001b[0m\n\u001b[1;32m     11\u001b[0m \u001b[0;31m# Підготовка даних\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     12\u001b[0m \u001b[0;31m# Завантажимо приклад датасету (можна замінити на власний)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m---> 13\u001b[0;31m \u001b[0mdata\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mload_boston\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m     14\u001b[0m \u001b[0mX\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mpd\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mDataFrame\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mdata\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mdata\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mcolumns\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mdata\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mfeature_names\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     15\u001b[0m \u001b[0my\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mpd\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mSeries\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mdata\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mtarget\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;31mNameError\u001b[0m: name 'load_boston' is not defined"]}]},{"cell_type":"code","source":["# 1. Реалізація дерева рішень\n","dt_model = DecisionTreeRegressor(max_depth=3, random_state=42)\n","dt_model.fit(X_train, y_train)\n","\n","# Оцінка моделі дерева рішень\n","y_pred_dt = dt_model.predict(X_test)\n","mse_dt = mean_squared_error(y_test, y_pred_dt)\n","mae_dt = mean_absolute_error(y_test, y_pred_dt)\n","r2_dt = r2_score(y_test, y_pred_dt)\n","\n","# Виведення результатів для дерева рішень\n","print(f\"Decision Tree MSE: {mse_dt}\")\n","print(f\"Decision Tree MAE: {mae_dt}\")\n","print(f\"Decision Tree R²: {r2_dt}\")\n","\n","# Візуалізація дерева рішень\n","plt.figure(figsize=(12, 8))\n","plot_tree(dt_model, filled=True, feature_names=X.columns, fontsize=10)\n","plt.show()\n"],"metadata":{"id":"h1Dn8Y8e2db4","executionInfo":{"status":"aborted","timestamp":1746405057184,"user_tz":-180,"elapsed":211,"user":{"displayName":"Bohdan Ostashchenko","userId":"07046015876740807484"}}},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["# 2. Реалізація Random Forest\n","rf_model = RandomForestRegressor(n_estimators=100, random_state=42)\n","rf_model.fit(X_train, y_train)\n","\n","# Оцінка моделі Random Forest\n","y_pred_rf = rf_model.predict(X_test)\n","mse_rf = mean_squared_error(y_test, y_pred_rf)\n","mae_rf = mean_absolute_error(y_test, y_pred_rf)\n","r2_rf = r2_score(y_test, y_pred_rf)\n","\n","# Виведення результатів для Random Forest\n","print(f\"Random Forest MSE: {mse_rf}\")\n","print(f\"Random Forest MAE: {mae_rf}\")\n","print(f\"Random Forest R²: {r2_rf}\")\n"],"metadata":{"id":"XAQXhWR12epp","executionInfo":{"status":"aborted","timestamp":1746405057191,"user_tz":-180,"elapsed":216,"user":{"displayName":"Bohdan Ostashchenko","userId":"07046015876740807484"}}},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["# 3. Реалізація XGBoost\n","xg_model = xgb.XGBRegressor(n_estimators=100, learning_rate=0.1, random_state=42)\n","xg_model.fit(X_train, y_train)\n","\n","# Оцінка моделі XGBoost\n","y_pred_xg = xg_model.predict(X_test)\n","mse_xg = mean_squared_error(y_test, y_pred_xg)\n","mae_xg = mean_absolute_error(y_test, y_pred_xg)\n","r2_xg = r2_score(y_test, y_pred_xg)\n","\n","# Виведення результатів для XGBoost\n","print(f\"XGBoost MSE: {mse_xg}\")\n","print(f\"XGBoost MAE: {mae_xg}\")\n","print(f\"XGBoost R²: {r2_xg}\")\n"],"metadata":{"id":"EBVklQ6W2fov","executionInfo":{"status":"aborted","timestamp":1746405057192,"user_tz":-180,"elapsed":215,"user":{"displayName":"Bohdan Ostashchenko","userId":"07046015876740807484"}}},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["# Порівняння важливості ознак\n","feature_importance_dt = dt_model.feature_importances_\n","feature_importance_rf = rf_model.feature_importances_\n","feature_importance_xg = xg_model.feature_importances_\n","\n","# Візуалізація важливості ознак\n","features = X.columns\n","plt.figure(figsize=(12, 8))\n","plt.barh(features, feature_importance_dt, alpha=0.6, label=\"Decision Tree\")\n","plt.barh(features, feature_importance_rf, alpha=0.6, label=\"Random Forest\")\n","plt.barh(features, feature_importance_xg, alpha=0.6, label=\"XGBoost\")\n","plt.xlabel(\"Feature Importance\")\n","plt.title(\"Feature Importance Comparison\")\n","plt.legend()\n","plt.show()\n","\n","# Визначення найважливіших факторів (за важливістю ознак)\n","print(\"\\nImportant features for Decision Tree:\")\n","print(pd.DataFrame(feature_importance_dt, index=features, columns=[\"Importance\"]).sort_values(by=\"Importance\", ascending=False))\n","\n","print(\"\\nImportant features for Random Forest:\")\n","print(pd.DataFrame(feature_importance_rf, index=features, columns=[\"Importance\"]).sort_values(by=\"Importance\", ascending=False))\n","\n","print(\"\\nImportant features for XGBoost:\")\n","print(pd.DataFrame(feature_importance_xg, index=features, columns=[\"Importance\"]).sort_values(by=\"Importance\", ascending=False))\n"],"metadata":{"id":"c2W-L05c2hGK","executionInfo":{"status":"aborted","timestamp":1746405057193,"user_tz":-180,"elapsed":214,"user":{"displayName":"Bohdan Ostashchenko","userId":"07046015876740807484"}}},"execution_count":null,"outputs":[]}]}